<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <script src="http://cdn.opalrb.org/opal/current/opal.js"></script>
    <script src="http://cdn.opalrb.org/opal/current/opal-parser.js"></script>
    <script type="text/javascript">Opal.load('opal-parser')</script>
    <title>Learn Ruby</title>

    <!-- Bootstrap -->
    <link href="bootstrap/css/bootstrap.min.css" rel="stylesheet">

    <style type="text/css">
        body {
            padding: 20px 50px; }

        .examplecode {
            margin: 20px 20px;
            background-color: #262626;
            color: #ffffff;
            padding: 10px 10px; }

        .codebutton {
            display:inline;
            margin: 0 0 0 auto; }

        .graphic {
            text-align: center; }
   
        .indent1 {
            text-indent: 2em; }

    </style>

    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->


  </head>
  <body>
    <nav>
        <ul class="pager">
            <li class="previous"><a href="index.htm"><span aria-hidden="true">&larr;</span> Back</a></li>
        </ul>
    </nav>
    <div class="page-header">
        <h1>Escaping the Dungeon</h1>
    </div>
    <div>
        <p>It's worse than we thought, there is another trap, it looks like an ordinary room but we cannot see the exit, Alioth can detect it however, but that means we will need to get Alioth to search the room.</p>
        <hr />
        <p>Firstly we need to be aware of several other functions Alioth has:</p>
        <div class="panel panel-default">
            <div class="panel-body examplecode">
                <p>canMoveUp?<br />canMoveDown?<br />canMoveLeft?<br />canMoveRight?<p>
            </div>
            <div class="panel-footer">
                <p>Which returns true if Alioth can move in the respective direction and false otherwise</p>
            </div>
        </div>
        <div class="panel panel-default">
            <div class="panel-body examplecode">
                <p>atExit?<p>
            </div>
            <div class="panel-footer">
                <p>Which returns true if Alioth has reached the exit and false otherwise</p>
            </div>
        </div>
        <p>As you can see these functions have question marks at the end that is to make it clear that they are like questions and return true or false values when evaluated</p>
        <hr />
        <p>And now we need ways of using these functions</p>
        <br />
        <p>We can use if statements to control whether something will happen based on a condition like those above like so:</p>
        <div class="panel panel-default">
            <div class="panel-body examplecode">
                <p>if canMoveUp?</p><p class="indent1">moveUp</p><p>end</p>
            </div>
            <div class="panel-footer">
                <p>This will cause Alioth to move upwards if possible. Note that there is an 'end' to mark the end of the for loop. The content inside the for loop is indented to make it clear what is included.</p>
            </div>
        </div>
        <p>It is also possible to further define if statements such that they have an else statement which will define what should happen if the if statement is false</p>
        <div class="panel panel-default">
            <div class="panel-body examplecode">
                <p>if canMoveUp?</p><p class="indent1">moveUp</p><p>else</p><p class="indent1">moveDown</p><p>end</p>
            </div>
            <div class="panel-footer">
                <p>This will cause Alioth to move upwards if possible otherwise Alioth will try to move down. The 'end' statement remains at the bottom of the overall if statement.</p>
            </div>
        </div>
        <p>You may have noticed that there is an issue with the above code in that whilst it will work if he can move down it will cause no effect otherwise, we can improve it using elsif statements which define another if conditional that will be checked to see if it is true if the ones above it are false. It is possible to have multiple of these in one if statement.</p>
        <div class="panel panel-default">
            <div class="panel-body examplecode">
                <p>if canMoveUp?</p><p class="indent1">moveUp</p><p>elsif canMoveDown?</p><p class="indent1">moveDown</p><p>elsif canMoveRight?</p><p class="indent1">moveRight</p><p>else</p><p class="indent1">moveLeft</p><p>end</p>
            </div>
            <div class="panel-footer">
                <p>This code will cause Alioth to move up if able to, else Alioth will move down if that is possible, if that is not and it is possible to move right, Alioth will move right, else Alioth cannot move in any other direction and so will try to move left.</p>
            </div>
        </div>
        <hr />
        <p>Another tool that can be employed are loops, the most simple of which is a while loop which takes a condition just like an if statement but will carry out the code it contains while that condition is true. Note that the while loop will only evaluate if the condition is true before each pass through the code it contains</p>
        <div class="panel panel-default">
            <div class="panel-body examplecode">
                <p>while canMoveUp?</p><p class="indent1">moveUp</p><p><p>end</p>
            </div>
            <div class="panel-footer">
                <p>In this example Alioth will move up as far as possible</p>
            </div>
        </div>
        <p>Another loop is the until loop which is the inverse of the while loop and will iterate through its code until the condition is true</p>
        <div class="panel panel-default">
            <div class="panel-body examplecode">
                <p>until atExit?</p><p class="indent1">moveUp</p><p>end</p>
            </div>
            <div class="panel-footer">
                <p>Here Alioth will keep moving up as far as possible until it reaches the exit of the maze</p>
            </div>
        </div>
        <p>So now try to see if you can help Alioth escape by using these techniques to help Alioth find the exit:</p>
        <div class="graphic">
            <canvas id="trap" width="400" height="400"></canvas>
        </div>
        <div class="panel panel-primary">
            <div class="panel-heading">
                <h3 class="panel-title">CodeBox <button type="button" onclick="Opal.eval(document.getElementById('dungeoncode').value);  Opal.Object.$check();" class="btn btn-default btn-default-lg codebutton">
                    <span class="glyphicon glyphicon-play" aria-hidden="true"></span>
                </button></h3>
            </div>
            <div class="panel-body">
                <textarea name="codebox" class="form-control" rows="5" id="dungeoncode"></textarea>
            </div>
        </div>
    </div>
    <script src="js/dungeon.js"></script>
    <script type="text/javascript">drawRobot(0,0);</script>
    <script type="text/ruby">
        $x = 0
        $y = 0

        def moveUp
            unless $y == 0
                $y -= 1
                %x{drawRobot(#{$x} * 80, #{$y} * 80);}
            end
        end

        def moveRight
            unless $x == 4
                $x += 1
                %x{drawRobot(#{$x} * 80, #{$y} * 80);}
            end
        end

        def moveLeft
            unless $x == 0
                $x -= 1
                %x{drawRobot(#{$x} * 80, #{$y} * 80);}
            end
        end

        def moveDown
            unless $y == 4
                $y += 1
                %x{drawRobot(#{$x} * 80, #{$y} * 80);}
            end
        end

        def canMoveUp?
            if $y == 0
                false
            else
                true
            end
        end

        def canMoveDown?
            if $y == 4
                false
            else
                true
            end
        end

        def canMoveLeft?
            if $x == 0
                false
            else
                true
            end
         end

        def canMoveRight?
            if $x == 4
                false
            else
                true
            end
        end

        def atExit?
            if ($x == 3 && $y == 2)
                true
            else
                false
            end
        end

        def check
            if atExit?
                %x{alert("Congratulations you found the exit!");}
            else
                %x{alert("Better luck next time"); drawRobot(0,0);}
                $x = 0
                $y = 0
            end
        end
    </script>
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
    <!-- Include all compiled plugins (below), or include individual files as needed -->
    <script src="bootstrap/js/bootstrap.min.js"></script>
  </body>
</html>
